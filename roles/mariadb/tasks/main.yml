---
# Paso 3: Instalar y configurar MariaDB
- name: Instalar el servidor MariaDB
  ansible.builtin.apt:
    name: mariadb-server
    state: latest

- name: Instalar el cliente de MariaDB
  ansible.builtin.apt:
    name: mariadb-client
    state: latest

- name: Instalar el driver Python para MariaDB/MySQL
  ansible.builtin.apt:
    name: python3-mysqldb
    state: latest

- name: Asegurar que MariaDB est치 iniciado
  ansible.builtin.service:
    name: mariadb
    state: started

# Seguridad y configuraci칩n de MariaDB
- name: Establecer contrase침a para root
  community.mysql.mysql_user:
    name: root
    host: localhost
    password: "test"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    check_implicit_admin: yes
    state: present

- name: Eliminar usuarios an칩nimos
  community.mysql.mysql_user:
    name: ''
    host_all: true
    state: absent
    login_user: root
    login_password: "test"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Denegar acceso remoto al usuario root
  community.mysql.mysql_user:
    name: root
    host: "{{ item }}"
    state: absent
    login_user: root
    login_password: "test"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  loop:
    - '%'
    - '::1'
    - '127.0.0.1'
  when: item != 'localhost'

- name: Eliminar base de datos de prueba
  community.mysql.mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "test"
    login_unix_socket: /var/run/mysqld/mysqld.sock

# Crear base de datos y usuario para WordPress
- name: Crear base de datos para WordPress
  community.mysql.mysql_db:
    name: wordpress_db
    state: present
    login_user: root
    login_password: "test"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Crear usuario para WordPress y asignar permisos
  community.mysql.mysql_user:
    name: wordpress_user
    password: "test"
    host: localhost
    priv: 'wordpress_db.*:ALL'
    state: present
    login_user: root
    login_password: "test"
    login_unix_socket: /var/run/mysqld/mysqld.sock
